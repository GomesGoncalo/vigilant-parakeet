name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: fmt
        run: cargo fmt --all -- --check
        timeout-minutes: 5

      - name: clippy
        run: cargo clippy --workspace --all-targets -- -D warnings
        timeout-minutes: 10

      - name: Build
        run: cargo build --workspace --locked
        timeout-minutes: 15

      - name: Test
        run: cargo test --workspace --features test_helpers --locked
        timeout-minutes: 10

  pages-build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin --locked
        timeout-minutes: 20

      - name: Run coverage (libs only)
        id: covrun
        env:
          RUSTFLAGS: "-C debuginfo=2"
        run: |
          set -euo pipefail
          mkdir -p ./target/tarpaulin
          # Run tarpaulin per library crate and write lcov into separate files
          cargo tarpaulin -p common --out Lcov --features test_helpers --timeout 120 --output-dir ./target/tarpaulin/common || true
          cargo tarpaulin -p node_lib --out Lcov --features test_helpers --timeout 120 --output-dir ./target/tarpaulin/node_lib || true
          cargo tarpaulin -p obu_lib --out Lcov --features test_helpers --timeout 120 --output-dir ./target/tarpaulin/obu_lib || true
          cargo tarpaulin -p rsu_lib --out Lcov --features test_helpers --timeout 120 --output-dir ./target/tarpaulin/rsu_lib || true
          # cargo tarpaulin -p visualization --out Lcov --features test_helpers --timeout 120 --output-dir ./target/tarpaulin/visualization || true

          # Concatenate all found lcov.info files into one
          find ./target/tarpaulin -name lcov.info -print0 | xargs -0 cat > ./target/tarpaulin/combined_lcov.info || true

          if [ ! -f ./target/tarpaulin/combined_lcov.info ]; then echo "combined_lcov.info not found"; exit 1; fi
          TOTAL_LF=$(grep -h ^LF: ./target/tarpaulin/combined_lcov.info | awk -F: '{s+=$2} END {print s+0}')
          TOTAL_LH=$(grep -h ^LH: ./target/tarpaulin/combined_lcov.info | awk -F: '{s+=$2} END {print s+0}')
          PCT=0.0
          if [ "$TOTAL_LF" -gt 0 ]; then PCT=$(awk "BEGIN { printf \"%.1f\", ($TOTAL_LH/$TOTAL_LF)*100 }"); fi
          echo "pct=$PCT" >> $GITHUB_OUTPUT
        timeout-minutes: 30
      - name: Generate coverage JSON for Shields.io
        run: |
          mkdir -p public/badges
          cat > public/badges/coverage.json <<EOF
          {"schemaVersion":1,"label":"coverage","message":"${{ steps.covrun.outputs.pct }}%","color":"blue"}
          EOF

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy-pages:
    needs: pages-build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
